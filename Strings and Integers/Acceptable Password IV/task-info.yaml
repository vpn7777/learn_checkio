type: checkiO
files:
- name: mission.py
  visible: true
  text: |
    # Taken from mission Acceptable Password III
    # Taken from mission Acceptable Password II
    # Taken from mission Acceptable Password I
    def is_acceptable_password(password: str) -> bool:
        flag = False
        if 6 < len(password) < 10 and any(i.isdigit() for i in password) and any(i.isalpha() for i in password):
            flag = True
        elif len(password) > 9:
            flag = True
        return flag


    print("Example:")
    print(is_acceptable_password("short"))

    # These "asserts" are used for self-checking
    assert is_acceptable_password("short") == False
    assert is_acceptable_password("short54") == True
    assert is_acceptable_password("muchlonger") == True
    assert is_acceptable_password("ashort") == False
    assert is_acceptable_password("notshort") == False
    assert is_acceptable_password("muchlonger5") == True
    assert is_acceptable_password("sh5") == False
    assert is_acceptable_password("1234567") == False
    assert is_acceptable_password("12345678910") == True

    print("The mission is done! Click 'Check Solution' to earn rewards!")
  learner_created: false
status: Solved
code: |
  # Taken from mission Acceptable Password III
  # Taken from mission Acceptable Password II
  # Taken from mission Acceptable Password I
  def is_acceptable_password(password: str) -> bool:
      flag = False
      if 6 < len(password) < 10 and any(i.isdigit() for i in password) and any(i.isalpha() for i in password):
          flag = True
      elif len(password) > 9:
          flag = True
      return flag


  print("Example:")
  print(is_acceptable_password("short"))

  # These "asserts" are used for self-checking
  assert is_acceptable_password("short") == False
  assert is_acceptable_password("short54") == True
  assert is_acceptable_password("muchlonger") == True
  assert is_acceptable_password("ashort") == False
  assert is_acceptable_password("notshort") == False
  assert is_acceptable_password("muchlonger5") == True
  assert is_acceptable_password("sh5") == False
  assert is_acceptable_password("1234567") == False
  assert is_acceptable_password("12345678910") == True

  print("The mission is done! Click 'Check Solution' to earn rewards!")
seconds_from_change: 497843
